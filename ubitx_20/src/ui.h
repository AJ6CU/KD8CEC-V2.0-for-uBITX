// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.3.4
// LVGL version: 8.3.6
// Project name: ubitx_20_ux

#ifndef _UBITX_20_UX_UI_H
#define _UBITX_20_UX_UI_H

#ifdef __cplusplus
extern "C" {
#endif

#if defined __has_include
#if __has_include("lvgl.h")
#include "lvgl.h"
#elif __has_include("lvgl/lvgl.h")
#include "lvgl/lvgl.h"
#else
#include "lvgl.h"
#endif
#else
#include "lvgl.h"
#endif

#include "ui_helpers.h"
#include "ui_events.h"
// SCREEN: ui_Screen1
void ui_Screen1_screen_init(void);
extern lv_obj_t * ui_Screen1;
void ui_event_fullScreenPanel(lv_event_t * e);
extern lv_obj_t * ui_fullScreenPanel;
extern lv_obj_t * ui_topMenuPanel;
void ui_event_txStopButton(lv_event_t * e);
extern lv_obj_t * ui_txStopButton;
extern lv_obj_t * ui_txStopLabel;
void ui_event_switchVFO(lv_event_t * e);
extern lv_obj_t * ui_switchVFO;
extern lv_obj_t * ui_currentVFO;
void ui_event_bandDownButton(lv_event_t * e);
extern lv_obj_t * ui_bandDownButton;
void ui_event_bandDownLabel(lv_event_t * e);
extern lv_obj_t * ui_bandDownLabel;
void ui_event_bandUpButton(lv_event_t * e);
extern lv_obj_t * ui_bandUpButton;
void ui_event_bandUpLabel(lv_event_t * e);
extern lv_obj_t * ui_bandUpLabel;
void ui_event_modeSelectButton(lv_event_t * e);
extern lv_obj_t * ui_modeSelectButton;
extern lv_obj_t * ui_modeSelectLabel;
void ui_event_lockDisplayButton(lv_event_t * e);
extern lv_obj_t * ui_lockDisplayButton;
extern lv_obj_t * ui_locKDisplayLabel;
void ui_event_spkToggleButton(lv_event_t * e);
extern lv_obj_t * ui_spkToggleButton;
extern lv_obj_t * ui_spkToggleLabel;
extern lv_obj_t * ui_VFOPanel;
extern lv_obj_t * ui_VFOUpperPanel;
extern lv_obj_t * ui_RXTXPanel;
void ui_event_RXButton(lv_event_t * e);
extern lv_obj_t * ui_RXButton;
extern lv_obj_t * ui_RXButtonLabel;
void ui_event_TXButton(lv_event_t * e);
extern lv_obj_t * ui_TXButton;
extern lv_obj_t * ui_TXButtonLabel;
void ui_event_activeVFOPanel(lv_event_t * e);
extern lv_obj_t * ui_activeVFOPanel;
extern lv_obj_t * ui_activeFreq;
extern lv_obj_t * ui_modeSelectPanel;
void ui_event_LSBModeButton(lv_event_t * e);
extern lv_obj_t * ui_LSBModeButton;
extern lv_obj_t * ui_LSBModeLabel;
void ui_event_USBModeButton(lv_event_t * e);
extern lv_obj_t * ui_USBModeButton;
extern lv_obj_t * ui_USBModeLabel;
void ui_event_CWLModeButton(lv_event_t * e);
extern lv_obj_t * ui_CWLModeButton;
extern lv_obj_t * ui_CWLModeLabel;
void ui_event_CWUModeButton(lv_event_t * e);
extern lv_obj_t * ui_CWUModeButton;
extern lv_obj_t * ui_CWUModeLabel;
void ui_event_VFOLowerPanel(lv_event_t * e);
extern lv_obj_t * ui_VFOLowerPanel;
extern lv_obj_t * ui_VFOInactiveFreqPanel;
extern lv_obj_t * ui_inactiveFreq;
extern lv_obj_t * ui_inactiveMode;
extern lv_obj_t * ui_firmwarePanel;
extern lv_obj_t * ui_firmwareOS;
extern lv_obj_t * ui_firmwareVersion;
void ui_event_SMeterPanel(lv_event_t * e);
extern lv_obj_t * ui_SMeterPanel;
extern lv_obj_t * ui_Panel7;
void ui_event_splitButton(lv_event_t * e);
extern lv_obj_t * ui_splitButton;
extern lv_obj_t * ui_splitButtonLabel;
void ui_event_ritButton(lv_event_t * e);
extern lv_obj_t * ui_ritButton;
extern lv_obj_t * ui_ritButtonLabel;
void ui_event_ifsButton(lv_event_t * e);
extern lv_obj_t * ui_ifsButton;
extern lv_obj_t * ui_ifsButtonLabel;
void ui_event_attButton(lv_event_t * e);
extern lv_obj_t * ui_attButton;
extern lv_obj_t * ui_attButtonLabel;
extern lv_obj_t * ui_Panel1;
void ui_event_tuneRateSelection(lv_event_t * e);
extern lv_obj_t * ui_tuneRateSelection;
extern lv_obj_t * ui_Label2;
extern lv_obj_t * ui_Panel8;
extern lv_obj_t * ui_Panel9;
extern lv_obj_t * ui_Label19;
extern lv_obj_t * ui_Label20;
extern lv_obj_t * ui_Panel10;
extern lv_obj_t * ui_Bar2;
void ui_event_bottomPanel(lv_event_t * e);
extern lv_obj_t * ui_bottomPanel;
extern lv_obj_t * ui_cwSettingsPanel;
extern lv_obj_t * ui_cwInfoCol1Panel;
extern lv_obj_t * ui_cwInfoLabel;
extern lv_obj_t * ui_cwKeySpeed;
extern lv_obj_t * ui_cwSidetone;
extern lv_obj_t * ui_cwInforCol2Panel;
extern lv_obj_t * ui_cwKeyType;
extern lv_obj_t * ui_cwKeySpeedUnits;
extern lv_obj_t * ui_cwSidetoneUnits;
extern lv_obj_t * ui_ATT_IFS_Panel;
extern lv_obj_t * ui_ATTPanel;
void ui_event_ATTgraph(lv_event_t * e);
extern lv_obj_t * ui_ATTgraph;
extern lv_obj_t * ui_ATTGraphLabels;
extern lv_obj_t * ui_ATTGraphLabel;
extern lv_obj_t * ui_ATTValueLabel;
extern lv_obj_t * ui_IFSPanel;
void ui_event_IFSgraph(lv_event_t * e);
extern lv_obj_t * ui_IFSgraph;
extern lv_obj_t * ui_IFSGraphLabels;
extern lv_obj_t * ui_IFSGraphLabel;
extern lv_obj_t * ui_IFSValueLabel;
extern lv_obj_t * ui_settings_panel;
extern lv_obj_t * ui_Label1;
extern lv_obj_t * ui____initial_actions0;

LV_IMG_DECLARE(ui_img_436403744);    // assets\att-graph.png
LV_IMG_DECLARE(ui_img_indicator_png);    // assets\indicator.png
LV_IMG_DECLARE(ui_img_2028451397);    // assets\ifs-graph.png
LV_IMG_DECLARE(ui_img_ifsindicator_png);    // assets\ifsindicator.png
LV_IMG_DECLARE(ui_img_att120x53_png);    // assets\att120x53.png
LV_IMG_DECLARE(ui_img_verticalfilled50_png);    // assets\verticalfilled50.png



void ui_init(void);

#ifdef __cplusplus
} /*extern "C"*/
#endif

#endif
